<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>se.lukesimmons</groupId>
  <artifactId>mssql</artifactId>
  <version>2017-CU6</version>
  <packaging>pom</packaging>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!-- Version of theFabric8 Docker Maven plugin. -->
    <docker-maven-plugin.version>0.21.0</docker-maven-plugin.version>
    <!--Log output during creation of Docker image to standard out. -->
    <docker.verbose>true</docker.verbose>
    <database.username>luksi1</database.username>
    <database.password>Abcd1234</database.password>
    <database.name>test</database.name>
    <database.port>1433</database.port>
  </properties>
  <dependencies>
    <dependency>
      <groupId>net.sourceforge.jtds</groupId>
      <artifactId>jtds</artifactId>
      <version>1.3.1</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy.modules</groupId>
      <artifactId>groovyws</artifactId>
      <version>0.5.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <version>1.3</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${docker-maven-plugin.version}</version>
        <configuration>
          <registry>${docker.registry}</registry>
          <images>
            <image>
              <name>luksi1/%a:latest</name>
              <build>
                <dockerFileDir>${project.basedir}/src/main</dockerFileDir>
                <tags>
                  <tag>${project.version}</tag>
                  <tag>latest</tag>
                </tags>
              </build>
              <run>
                <portPropertyFile>/tmp/mssql.port.properties</portPropertyFile>
                <env>
                  <MSSQL_USER>${database.username}</MSSQL_USER>
                  <MSSQL_PASSWORD>${database.password}</MSSQL_PASSWORD>
                  <MSSQL_SA_PASSWORD>${database.password}</MSSQL_SA_PASSWORD>
                  <MSSQL_DATABASE>${database.name}</MSSQL_DATABASE>
                </env>
                <wait>
                  <!--You can use this if you are using the image.
                  This is commented out here, as the scripts used to add user have to be
                  added after the database is up, so the tests will fail, as the user(s)
                  have never been added 
                  -->
                  <!--<log>SQL Server is now ready for client connections.</log> -->
                  <time>30000</time>
                </wait>
                <ports>
                  <port>database.random.port:${database.port}</port>
                </ports>
              </run>
            </image>
          </images>
        </configuration>
        <executions>
          <execution>
            <id>start</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>build</goal>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>stop</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.gmaven</groupId>
        <artifactId>gmaven-plugin</artifactId>
        <version>1.5</version>
        <configuration>
          <providerSelection>1.8</providerSelection>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.codehaus.gmaven.runtime</groupId>
            <artifactId>gmaven-runtime-1.8</artifactId>
            <version>1.5</version>
          </dependency>
          <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <version>1.8.8</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <goals>
              <goal>generateStubs</goal>
              <goal>compile</goal>
              <goal>generateTestStubs</goal>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.1.1</version>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.12</version>
        <executions>
          <execution>
            <id>integration-test</id>
            <phase>integration-test</phase>
            <goals>
              <goal>integration-test</goal>
            </goals>
          </execution>
          <execution>
            <id>verify</id>
            <phase>verify</phase>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
